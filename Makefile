TARGETS := adapsimpson adaprandom semi_random test

CC := gcc
CXX := g++
ifeq ($(ON_KILKENNY), 1)
CC := /opt/gcc/4.6.2/bin/gcc
CXX := /opt/gcc/4.6.2/bin/g++
endif
# You can add -Werr to GCC to force all warnings to turn into errors
CFLAGS := -cpp -Wall
CXXFLAGS := -cpp -Wall -std=c++0x
LDFLAGS := -lpthread

HEADERS := \
	parameters.h \
	interp.h \
	adapsimpsint.h \
	xsdata.h \
	util.h \
	productcdf.h \

# Blank line ends list.

# If you add a new file called "filename.c", you should
# add "filename.o \" to this list.
OBJS := \
	xsdata.o \
	adapsimpsint.o \
	adaprandom.o \
	productcdf.o \

TOBJS := \
	main.o \
	main_random.o \
	semi_random.o \
	test.o \

# Blank line ends list.

OLDMODE := $(shell cat .buildmode 2> /dev/null)
ifeq ($(DEBUG),1)
CFLAGS := -DDEBUG -g -O0 $(CFLAGS)
CXXFLAGS := -DDEBUG -g -O0 $(CXXFLAGS)
ifneq ($(OLDMODE),debug)
$(shell echo debug > .buildmode)
endif
else
CFLAGS := -DNDEBUG -O3 $(CFLAGS)
CXXFLAGS := -DNDEBUG -O3 $(CXXFLAGS)
ifneq ($(OLDMODE),nodebug)
$(shell echo nodebug > .buildmode)
endif
endif

# make all targets specified
all: $(TARGETS)

.PHONY: pintool
pintool:
	$(MAKE) -C pintool

adapsimpson: $(OBJS) main.o $(HEADERS)
	$(CXX) $(OBJS) main.o -o $@ $(LDFLAGS)
	
adaprandom: $(OBJS) main_random.o $(HEADERS)
	$(CXX) $(OBJS) main_random.o -o $@ $(LDFLAGS)
	
semi_random: $(OBJS) semi_random.o $(HEADERS)
	$(CXX) $(OBJS) semi_random.o -o $@ $(LDFLAGS)

test: xsdata.o productcdf.o test.o
	$(CXX) $^ -o $@ $(LDFLAGS)

# compile objects

# pattern rule for building objects
%.o: %.cxx %.h $(HEADERS) .buildmode Makefile
	$(CXX) $(CXXFLAGS) -c $< -o $@
%.o: %.c %.h $(HEADERS) .buildmode Makefile
	$(CC) $(CFLAGS) -c $< -o $@

# remove targets and .o files as well as output generated by CQ
neat:
	$(RM) $(OBJS) test.o *.std*
clean:
	$(RM) $(TARGETS) $(OBJS) $(TOBJS) *.std* .buildmode
